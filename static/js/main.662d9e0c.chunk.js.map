{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","getAllShows","a","axios","get","state","tvShow","response","setState","items","data","onInputChange","e","target","value","isLoaded","summary","__html","className","type","placeholder","onChange","onClick","this","length","map","item","index","src","show","image","medium","alt","name","dangerouslySetInnerHTML","createMarkup","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRA6DeA,G,wDAxDb,aAAe,IAAD,8BACZ,gBAOFC,YARc,sBAQA,4BAAAC,EAAA,sEACWC,IAAMC,IAAN,gDAAmD,EAAKC,MAAMC,SADzE,OACNC,EADM,OAEZ,EAAKC,SAAS,CAAEC,MAAOF,EAASG,OAFpB,2CARA,EAadC,cAAgB,SAACC,GACf,EAAKJ,SAAS,CAAEF,OAAQM,EAAEC,OAAOC,SAZjC,EAAKT,MAAQ,CACXC,OAAQ,GACRG,MAAO,GACPM,UAAU,GALA,E,yDAiBDC,GACX,MAAO,CAAEC,OAAQD,K,+BAGT,IAAD,OACP,OACE,sBAAKE,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,gDAEF,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,eAAf,UACA,uBAAOC,KAAK,OAAOD,UAAU,aAAaE,YAAY,gBAAgBC,SAAU,SAACT,GAAD,OAAO,EAAKD,cAAcC,MAC1G,wBAAQO,KAAK,SAASD,UAAU,kBAAkBI,QAASC,KAAKtB,YAAhE,uBAEA,8BACKsB,KAAKlB,MAAMI,OAASc,KAAKlB,MAAMI,MAAMe,OAAS,EAAID,KAAKlB,MAAMI,MAAMgB,KAAI,SAACC,EAAMC,GAAP,OACvE,sBAAKT,UAAU,eAAf,UACG,qBACEU,IAAKF,EAAKG,KAAKC,OAASJ,EAAKG,KAAKC,MAAMC,OACxCC,IAAI,WAEN,sBAAKd,UAAU,YAAf,UACE,6BAAiBQ,EAAKG,KAAKI,MAAlBN,GACT,qBAAKT,UAAU,UACbgB,wBAAyB,EAAKC,aAC5BT,EAAKG,KAAKb,WAGd,wBAAQG,KAAK,SAASD,UAAU,kBAAkBI,QAAS,kBAAK,MAAhE,oCAGD,iB,GAlDDc,IAAMC,YCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.662d9e0c.chunk.js","sourcesContent":["import React from 'react';\nimport axios from \"axios\";\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      tvShow: \"\",\n      items: [],\n      isLoaded: false\n    }\n  }\n  getAllShows = async () => {\n    const response = await axios.get(`https://api.tvmaze.com/search/shows?q=${this.state.tvShow}`);\n    this.setState({ items: response.data });\n  }\n\n  onInputChange = (e) => {\n    this.setState({ tvShow: e.target.value });\n  }\n\n  createMarkup(summary) {\n    return { __html: summary };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div>Show Finder</div>\n        </header>\n        <div className=\"body-content\">\n          <div className=\"search-shows\">\n          <input type=\"text\" className=\"searchHere\" placeholder=\"Search here..\" onChange={(e) => this.onInputChange(e)}></input>\n          <button type=\"button\" className=\"btn btn-primary\" onClick={this.getAllShows}>Search</button>\n          </div>\n          <div>\n              {this.state.items && this.state.items.length > 0 ? this.state.items.map((item, index) => (\n               <div className=\"show-details\">\n                  <img\n                    src={item.show.image && item.show.image.medium}\n                    alt=\"poster\"\n                  />\n                  <div className=\"show-name\">\n                    <h1 key={index}>{item.show.name}</h1>\n                    <div className=\"summary\"\n                      dangerouslySetInnerHTML={this.createMarkup(\n                        item.show.summary\n                      )}\n                    />\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={()=> null}>Show Episodes</button>\n                  </div>\n                </div>\n              )) : null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}